def merge_sort(arr):
    if len(arr)<=1:
        return arr
    
    #divide the array
    
    mid=len(arr)//2
    left_half=arr[:mid]
    right_half=arr[mid:]

    #Recursively run merge_sort to get the sorted array on both sides 

    left_half=merge_sort(left_half)
    right_half=merge_sort(right_half)


    return merged(left_half,right_half)

def merged(left,right):
    i,j=0,0
    merged=[]

    while i<len(left) and j<len(right):
        if left[i]<right[j]:
            merged.append(left[i])
            i+=1
        else:
            merged.append(right[j])
            j+=1

    while i<len(left):
        merged.append(left[i])
        i+=1
    
    while j<len(right):
        merged.append(right[j])
        j+=1

    return merged

print(merge_sort([7,6,5,4,3,2,1]))

    
